local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local plr = game:GetService('Players').LocalPlayer

local Window = OrionLib:MakeWindow({Name = "Bloodlines", HidePremium = false, SaveConfig = true, ConfigFolder = "Tus"})
local infcharge = false

local datastructre = {
	wheat = false,
	wheat_pos = nil,
	wheat_damage = 98,
	wheat_res = false,

	sharingan = false,
	sharingan_tomoes = 1,
	sharingan_pos = nil,

	bug_server = {},
	bug_cmd = 'tudeptrai',

	refreshrate = 5,

	TakeChakra = false,
	InflictBlackFire = false,
	InflictFire = false,

	SaveVersion = '1'
}

local function notification(text,dur)
	if not dur then dur = 5 end
	OrionLib:MakeNotification({
		Name = "Peepoo Peepoo",
		Content = text,
		Image = "rbxassetid://4483345998",
		Time = dur
	})
end


local isloaded, datagive
local Variables = {}
local file = "tushub.json"

local function save(t)
	local get_data = game:service'HttpService':JSONDecode(readfile(file))
	for i,v in pairs(datastructre) do
		get_data[i] = v
	end
	writefile(file, game:service'HttpService':JSONEncode(get_data))
end
setmetatable(Variables,{
	__index = function(t,i)
		if i then
			return datastructre[i]
		else
			return datastructre
		end
	end,
	__newindex = function(t,k,v)
		datastructre[k] = v
		save()
	end,
})

if isfile(file) then
	local get_data = game:service'HttpService':JSONDecode(readfile(file))
	if not get_data.SaveVersion or (get_data.SaveVersion and get_data.SaveVersion ~= datastructre.SaveVersion) then
		get_data = datastructre
	else
		for i,v in pairs(datastructre) do
			if not get_data[i] then
				get_data[i] = v
			end
		end
	end
	datastructre = get_data
else
	data_give = datastructre
end

isloaded = true

local nostam = false
local mt = getrawmetatable(game)
local index = mt.__index
local newindex = mt.__newindex
local namecall = mt.__namecall

local cheat = {'TakeChakra','InflictBlackFire','InflictFire'}

setreadonly(mt, false)
mt.__namecall = newcclosure(function(self,...)
	local args = {...}
	local method = getnamecallmethod()
	if method:lower() == "fireserver" and not checkcaller() then
		if args[1] == 'BanMe' then
			return
		end
		if table.find(cheat,args[1]) and Variables[args[1]] == true then
			return
		end
		if nostam == true and table.find({'Jump','TreeJump'},args[1]) then
			return
		end
		if args[1] == 'StopCharging' and infcharge == true then
			return
		end
	end
	return namecall(self,...)
end)
setreadonly(mt, true)

local function reset()
	game.Players.LocalPlayer.Character:BreakJoints()
end
local function checker()
	local rp = game.Players.LocalPlayer.Character.HumanoidRootPart
	local has = false
	for i,v in pairs(game:GetService('Players'):GetChildren()) do
		if v.Character and v.Character:FindFirstChild('HumanoidRootPart') then
			local length = (rp.Position - v.Character:FindFirstChild('HumanoidRootPart').Position).Magnitude
			if length < 50 then
				local R = RaycastParams.new()
				R.FilterType = Enum.RaycastFilterType.Blacklist
				R.FilterDescendantsInstances = {rp.Parent,v.Character}
				local Result = workspace:Raycast(rp.Position, v.Character:FindFirstChild('HumanoidRootPart').CFrame.LookVector*length, R)
				if Result then

				else
					has = true
					break
				end
			end
		end
	end
	print(has)
	return has
end
local function bug()
	if game.Workspace.FilteringEnabled == false then
		game.Players.LocalPlayer.Character.Humanoid.MaxHealth = 0
	end
	if game.Workspace.FilteringEnabled == true then
		local player=game.Players.LocalPlayer.Character
		player.Humanoid:Remove()
		Instance.new('Humanoid',player)
	end
end

local Tab_char = Window:MakeTab({
	Name = "Self",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
Tab_char:AddButton({
	Name = "Reset Character",
	Callback = function()
		reset()
	end    
})
local hasskillmodule = require(game.ReplicatedStorage.GameManager)
local ongodcheat = {'Core Strength','Lightweight','Aerial Backflip','Triple Jump','Chakra Tree Jump','Chakra Feet','Chakra Dash','Lightning Dodge','Substitution','Efficient Substitution','Aerial Heavy Attack'}
local old
Tab_char:AddButton({
	Name = "On God Mode",
	Callback = function()
		notification('Rejoin to disable this')
		old = hookfunction(hasskillmodule.hasSkill, function(...)
			local args = {...}
			return true
		end)
	end    
})

Tab_char:AddBind({
	Name = "Infinite Stamina",
	Default = Enum.KeyCode.K,
	Hold = false,
	Callback = function()
		nostam = not nostam
		notification('Infinite Stamina: '..tostring(nostam))
	end    
})
Tab_char:AddBind({
	Name = "Chakra Charger",
	Default = Enum.KeyCode.J,
	Hold = false,
	Callback = function()
		infcharge = not infcharge
		if infcharge == true then
			local args = {
				[1] = "Charging"
			}
			game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(unpack(args))
		end
		notification('Chakra Charger: '..tostring(infcharge))
	end    
})

local Tab_wheat = Window:MakeTab({
	Name = "Wheat",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
Tab_wheat:AddToggle({
	Name = "Toggle Wheat mode",
	Default = false,
	Callback = function(Value)
		Variables.wheat = Value
		if Value == true then
			Variables.wheat_pos = game.Players.LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0,1,0)
			reset()
		else
			if game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then
				game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Anchored = false
			end
		end
	end    
})
Tab_wheat:AddToggle({
	Name = "Auto Restore",
	Default = false,
	Callback = function(Value)
		Variables.wheat_res = Value
	end    
})
Tab_wheat:AddSlider({
	Name = "Adjust Damage Get (not work when wiped)",
	Min = 0,
	Max = 200,
	Default = Variables.wheat_damage,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Damage",
	Callback = function(Value)
		Variables.wheat_damage = Value
	end    
})


local Tab_sharingan = Window:MakeTab({
	Name = "Sharingang Farming",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
Tab_sharingan:AddToggle({
	Name = "Toggle",
	Default = false,
	Callback = function(Value)
		Variables.sharingan = Value
		if Value == true then
			Variables.sharingan_pos = game.Players.LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0,1,0)
			reset()
		end
	end    
})
Tab_sharingan:AddSlider({
	Name = "Adjust Tomoes",
	Min = 1,
	Max = 3,
	Default = 1,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Tomoes",
	Callback = function(Value)
		Variables.sharingan_tomoes = Value
	end    
})

local Tab_bug = Window:MakeTab({
	Name = "Bug all bosses",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
Tab_bug:AddButton({
	Name = "Bug",
	Callback = function()
		bug()
	end    
})
Tab_bug:AddBind({
	Name = "Keybind",
	Default = Enum.KeyCode.O,
	Hold = false,
	Callback = function()
		bug()
	end    
})
local tsb = false
if table.find(Variables.bug_server,plr.Name) then
	tsb = true
end
Tab_bug:AddToggle({
	Name = "Toggle Server Bugger",
	Default = tsb, 
	Callback = function(Value)
		if Value == true then
			if not table.find(Variables.bug_server,plr.Name) then
				table.insert(Variables.bug_server,plr.Name)
			end
		else
			if table.find(Variables.bug_server,plr.Name) then
				table.remove(Variables.bug_server,table.find(Variables.bug_server,plr.Name))
			end
		end
	end    
})
Tab_bug:AddTextbox({
	Name = "Command: ",
	Default = Variables.bug_cmd,
	TextDisappear = false,
	Callback = function(Value)
		Variables.bug_cmd = Value
	end	  
})

local function getdata()
	local args = {
		[1] = "GetData"
	}
	local getto = game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(unpack(args))
	return getto
end
local Tab_data = Window:MakeTab({
	Name = "Personal Data",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
local m1s = Tab_data:AddLabel("M1s: ")
local knocks = Tab_data:AddLabel("Knocks: ")
local su = Tab_data:AddLabel("Sharingan Usage: ")
local grips = Tab_data:AddLabel("Grips: ")
local pin = Tab_data:AddLabel("PIN: ")
local gb = Tab_data:AddLabel('Gripped by: ')
local function refresh()
	local data = getdata()
	m1s:Set('M1s: '..tostring(data.M1s))
	knocks:Set('Knocks: '..tostring(data.Knocks))
	su:Set('Sharingang Usage: '..tostring(data.SharinganUsage))
	grips:Set('Grips: '..tostring(data.Grips))
	pin:Set('PIN: '..tostring(data.Pin or '???'))
	gb:Set('Gripped by: '..tostring(game:GetService('HttpService'):JSONEncode(data.GrippedBy)))
end
refresh()
Tab_data:AddButton({
	Name = "Refresh",
	Callback = function()
		refresh()
	end    
})

local Tab_Map = Window:MakeTab({
	Name = "Map",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
Tab_Map:AddToggle({
	Name = "Reject Fire",
	Default = tsb, 
	Callback = function(Value)
		Variables.InflictFire = Value
	end    
})
Tab_Map:AddToggle({
	Name = "Reject Black Fire",
	Default = tsb, 
	Callback = function(Value)
		Variables.InflictBlackFire = Value
	end    
})

local Tab_exc = Window:MakeTab({
	Name = "Exculives",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
Tab_exc:AddLabel('No sins needed, works everywhere')
Tab_exc:AddButton({
	Name = "Implant Eyes (must equip)",
	Callback = function()
		local event = game.ReplicatedStorage.Events.DataEvent
		event:FireServer("ImplantEyes")
	end    
})
Tab_exc:AddButton({
	Name = "Upgrade Sharingan",
	Callback = function()
		local event = game.ReplicatedStorage.Events.DataEvent
		event:FireServer("UpgradeSharingan")
	end    
})
Tab_exc:AddButton({
	Name = "Upgrade Byakugan",
	Callback = function()
		local event = game.ReplicatedStorage.Events.DataEvent
		event:FireServer("UpgradeByakugan")
	end    
})
Tab_exc:AddButton({
	Name = "Upgrade Awakening Level",
	Callback = function()
		local event = game.ReplicatedStorage.Events.DataEvent
		event:FireServer("UpgradeAwakeningLevel")
	end    
})
Tab_exc:AddButton({
	Name = "Upgrade Aryui Affinity",
	Callback = function()
		local event = game.ReplicatedStorage.Events.DataEvent
		event:FireServer("UnlockAyruiAffinity")
	end    
})

local Tab_misc = Window:MakeTab({
	Name = "Misc",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
local injection = {
	iy = false,
	ue = false,
	autoclick = false,
	dex = false
}
local links = {
	iy = 'https://pastebin.com/raw/tzTXmYf2',
	ue = 'https://raw.githubusercontent.com/ic3w0lf22/Unnamed-ESP/master/UnnamedESP.lua',
	autoclick = 'https://raw.githubusercontent.com/TheGuyYallKnow/Tusdeptrai/main/autoclicker',
	dex = 'https://raw.githubusercontent.com/Uvxtq/lua/main/Dark%20Dex%20Made%20by%20Moon%2C%20wally%2C%20and%20ic3.lua',
}
Tab_misc:AddButton({
	Name = "Infinite yield",
	Callback = function()
		if injection.iy == false then
			injection.iy = true
			loadstring(game:HttpGetAsync(links.iy))()
		end
	end    
})
Tab_misc:AddButton({
	Name = "Unnamed Esp",
	Callback = function()
		if injection.ue == false then
			injection.ue = true
			loadstring(game:HttpGetAsync(links.ue))()
		end
	end    
})
Tab_misc:AddButton({
	Name = "Auto click",
	Callback = function()
		if injection.autoclick == false then
			injection.autoclick = true
			loadstring(game:HttpGetAsync(links.autoclick))()
		end
	end    
})
Tab_misc:AddButton({
	Name = "Dark Dex",
	Callback = function()
		if injection.dex == false then
			injection.dex = true
			loadstring(game:HttpGetAsync(links.dex))()
		end
	end    
})


local pos = {
	wheat = Vector3.new(1100.4493408203125, 209.48562622070312, 1360.2628173828125),
	farmer = Vector3.new()
}

local function getplayer()
	return game:GetService('Players').LocalPlayer
end

local wheat = {
	removeff = function()
		local plr = getplayer()
		for i,v in pairs(plr.Character:GetChildren()) do
			if v:IsA('ForceField') then
				v:Destroy()
			end
		end
	end,
	getlow = function()
		local args = {
			[1] = "TakeDamage",
			[2] = Variables.wheat_damage,
		}
		game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(unpack(args))
	end,
}

game.Players.LocalPlayer.CharacterAdded:Connect(function(c)
	wait(2)
	repeat wait() until c:FindFirstChild('Humanoid') and c:FindFirstChild('HumanoidRootPart')
	if Variables.wheat_res == true and getdata().LifeForce == 0 then
		local args = {
			[1] = "RequestReincarnation",
			[2] = "Male"
		}
		game:GetService("ReplicatedStorage").Events.DataFunction:InvokeServer(unpack(args))
		return
	end
	--repeat wait(1) until checker() == false
	--[[
	if checker() == true then
		repeat 
			wait(1)
		until checker() == false
	end
	]]
	if Variables.wheat == true then
		c.HumanoidRootPart.CFrame = CFrame.new(Variables.wheat_pos or pos.wheat)
		wheat.removeff()
		wait(1)
		wheat.getlow()
	elseif Variables.sharingan then
		if Variables.sharingan_pos then
			c.HumanoidRootPart.CFrame = CFrame.new(Variables.sharingan_pos)
		end
		local args = {
			[1] = "Awaken",
			[2] = "Sharingan [Stage "..tostring(Variables.sharingan_tomoes).."]"
		}
		game:GetService("ReplicatedStorage").Events.DataEvent:FireServer(unpack(args))
		wait(1)
		game.Players.LocalPlayer.Character:BreakJoints()
	end
end)

local function output(player, msg)
	if not Variables.bug_cmd then print('no bug cmd') return end
	if not table.find(Variables.bug_server,plr.Name) then print('not enabled?') return end
	Variables.bug_cmd = Variables.bug_cmd:lower()
	local bugged = false
	if msg:lower() == Variables.bug_cmd then
		bugged = true
	end
	if bugged == true then
		bug()
	end
end

local event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents
event.OnMessageDoneFiltering.OnClientEvent:Connect(function(object)
	local speaker = object.FromSpeaker
	local msg = object.Message

	local that_plr = game:GetService('Players'):FindFirstChild(tostring(speaker))
	if that_plr then
		output(that_plr,tostring(msg))
	end
end)

OrionLib:Init()
